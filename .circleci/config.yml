# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

commands:


jobs:
  install:
    docker:
      - image: circleci/node:12.14

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  test:
    docker:
      - image: circleci/node:12.14

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Run Test
          command:  CI=true yarn test

  lint:
    docker:
      - image: circleci/node:12.14

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn run lint:ci

  deploy:
    docker:
      - image: circleci/node:12.14

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: React Build
          command: yarn run build

      - run:
          name: Firebase Deploy
          command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_TOKEN"


workflows:
  version: 2
  web_app_ci:
    jobs:
      - install
      - test:
          requires:
            - install
      - lint:
          requires:
            - install
      - hold:
          type: approval
          requires:
            - test
            - lint
          filters:
            branches:
              only: 'master'
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: 'master'
